@startuml
!theme cerulean

class MateriaPrima {
- descripcion: String
- cantidad: int
- costo: double
- proveedor: Proveedor
+ MateriaPrima()
+ MateriaPrima(descripcion: String, cantidad: int, costo: double, proveedor: Proveedor)
+ getDescripcion(): String
+ setDescripcion(descripcion: String): void
+ getCantidad(): String
+ setCantidad(cantidad: int): void
+ getCosto(): String
+ setCosto(costo: double): void
+ getProveedor(): String
+ setProveedor(proveedor: Proveedor): void
}

class FabricaDeCaramelos {
- nombre: String
- director: String
- costo: double
+ FabricaDeCaramelos()
+ FabricaDeCaramelos(nombre: String, director: String, costo: double)
+ getNombre(): String
+ setNombre(nombre: String): void
+ getDirector(): String
+ setDirector(director: String): void
+ getCosto(): String
+ setCosto(costo: double): void
+ CostoTotal(costo: double): void
}



class Pedido {
- materiaPrima: MateriaPrima
- cantidad: int
- empleado: Empleado
+ Pedido()
+ Pedido(materiaPrima: MateriaPrima, cantidad: int, empleado: Empleado)
+ getMateriaPrima(): MateriaPrima
+ setMateriaPrima(materiaPrima: MateriaPrima): void
+ getCantidad(): String
+ setCantidad(cantidad: int): void
+ getEmpleado(): String
+ setEmpleado(empleado: Empleado): void
}

class Proveedor {
- empresa: String
+ Proveedor()
+ Proveedor(empresa: String)
+ getEmpresa(): String
+ setEmpresa(empresa: String): void
}

abstract class Persona {
# nombre: String
# ci: String
+ Persona()
+ Persona(nombre: String, ci: String)
+ getNombre(): String
+ setNombre(nombre: String): void
+ getCi(): String
+ setCi(ci: String): void         
}

FabricaDeCaramelos "1" *--- "1..*" MateriaPrima
MateriaPrima "1..*" ---o "1" Pedido
MateriaPrima "1..*" o--- "1" Proveedor
Persona  <|--Proveedor

@enduml